tmux3.0a长按右键可以弹出一些有用的菜单

tmux2.9a双键，三击等是正常的

gnome终端选中后还要按y才能复制，这个在3.0之前也是如此？应该是的

先使用3.0a，要是有问题，退回2.9，2.8再试试

# tmux3.0a 左键双击，三击无效了

### 以下配置为双击选中并复制单词，三击选中并复制行，不用问题也不大，不过有空解决下看看 ###
# Double LMB Select & Copy (Word)
COPY_CMD="xclip -selection clipboard -i > /dev/null 2>&1 || pbcopy -in -sel primary > /dev/null 2>&1"
bind-key -T copy-mode-vi DoubleClick1Pane \
    select-pane \; \
    send-keys -X select-word \; \
    send-keys -X copy-pipe "$COPY_CMD"
bind-key -n DoubleClick1Pane \
    select-pane \; \
    copy-mode -M \; \
    send-keys -X select-word \; \
    send-keys -X copy-pipe "$COPY_CMD"

# Triple LMB Select & Copy (Line)
bind-key -T copy-mode-vi TripleClick1Pane \
    select-pane \; \
    send-keys -X select-line \; \
    send-keys -X copy-pipe "$COPY_CMD"
bind-key -n TripleClick1Pane \
    select-pane \; \
    copy-mode -M \; \
    send-keys -X select-line \; \
    send-keys -X copy-pipe "$COPY_CMD"


# ubuntu默认终端选中无法自动复制，可以所有gnome终端都有这问题，其它终端正常
### 自动复制鼠标选中的内容，ubuntu默认终端无效，在其它终端如alacritty中，！！！不需要以下配置也能自动复制
### 仅仅保留当做配置参考，基本无用
# For vi copy mode bindings
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"
# For emacs copy mode bindings
# bind-key -T copy-mode MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"



# 选择复制后不退出copy-mode
# https://github.com/tmux/tmux/issues/140
# For users of the tmux-yank plugin, just need the following line:
# set -g @yank_action 'copy-pipe' # or 'copy-pipe-and-cancel' for the default

# if without tmux-yank
# disable "release mouse drag to copy and exit copy-mode", ref: https://github.com/tmux/tmux/issues/140
# unbind-key -T copy-mode-vi MouseDragEnd1Pane

# since MouseDragEnd1Pane neither exit copy-mode nor clear selection now,
# let single click do selection clearing for us.
# bind-key -T copy-mode-vi MouseDown1Pane select-pane\; send-keys -X clear-selection

# this line changes the default binding of MouseDrag1Pane, the only difference
# is that we use `copy-mode -eM` instead of `copy-mode -M`, so that WheelDownPane
# can trigger copy-mode to exit when copy-mode is entered by MouseDrag1Pane
# bind -n MouseDrag1Pane if -Ft= '#{mouse_any_flag}' 'if -Ft= \"#{pane_in_mode}\" \"copy-mode -eM\" \"send-keys -M\"' 'copy-mode -eM'


# ### color set start
# 不同终端模拟器对于基础色的定义都不太一样,指定各基础色的16进制来保证表现一致
miku_origin="#39c5bb"
miku_brightness_65="#30a69e"
miku_brightness_50="#258079"

color_black='black'
color_red='red'
color_green=$miku_origin
color_yellow='yellow'
color_blue=$miku_brightness_65
color_magenta='magenta'
color_cyan='cyan'
color_white='#ffffff'

# man tmux | grep For how to specify style, see the message-command-style option.

# 当前tab背景色
set -g window-status-current-style "bg=$color_white",fg="$miku_brightness_50,bold"

# 当前pane边框颜色
set -g pane-active-border-style "fg=$miku_origin"

# 状态栏颜色
set -g status-style "fg=$miku_brightness_50",bg=$miku_origin

# 状态栏右侧颜色(含主机名的那一段)
set -g status-right-style bg=$miku_origin

# copy-mode 鼠标选中等配色
set -g mode-style bg=$miku_brightness_65,"fg=$color_white"

# prefix+: 配色
set -g message-style bg=$miku_origin,"fg=$color_black"

set -g message-command-style bg=$miku_origin

# 有活动状态的tab配色,默认为反转
set -g window-status-activity-style "bg=$miku_brightness_50",fg="$color_white"
# ### color set end
