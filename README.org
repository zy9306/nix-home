#+OPTIONS: ^:{}
#+OPTIONS: -:nil

* nix environment

** 安装 nix
#+begin_quote
https://nixos.org/download.html#nix-quick-install
#+end_quote

#+begin_src shell
curl -L https://nixos.org/nix/install | sh
#+end_src

注意：必须以非 ~root~ 用户安装

** 一些常用命令

*** 构建

- nix-build -A {attrPath} {paths}
  
  构建一个包

  attrPath 为 nix 文件中定义的属性名/包名
  paths 为 nix 文件路径

  #+begin_example
  nix-build -A emacsGcc ./emacs/default.nix
  #+end_example

*** 安装

- nix-env -iA {pkg} -f {paths}

  从文件中安装一个包

  pkg 为 nix 文件中定义的属性名/包名
  paths 为 nix 文件路径，或者 url
  
  #+begin_example
  nix-env -iA emacsGcc -f ./emacs
  #+end_example

- nix-env --install gcc-3.3.2

- nix-env -i -A gcc40mips

- nix-env -iA emacsGcc -f ./emacs --dry-run

  不实际安装，仅查看安装内容

*** 查询

- nix-env -qaP {pkg}

  查询 pkg , 支持通配符

- nix-env -qa -f {paths}

  查询 nix 文件中的包

- nix-env -f ~/foo.nix -i '.*'

  安装一个文件中的所有包

- nix-env -q

  To show installed packages

- nix-env -qa '.*(firefox|chromium).*'

  To show all packages with “firefox” or “chromium” in the name

*** 升级

- nix-env --upgrade gcc

  升级

*** 删除

- nix-env --uninstall gcc

  删除

- nix-env -e '.*'

  remove everything

*** 回滚

- nix-env --list-generations

- nix-env --rollback {generation}

  配合 --list-generations 使用

*** 安装时解决冲突和优先级

- --set-flag

  - nix-env --set-flag keep true firefox

    nix-env -u 里不会更新 firefox

  - --preserve-installed

    保留旧版本 firefox 配置文件的情况下安装新的 firefox
    - nix-env --set-flag active false firefox
    - nix-env --preserve-installed -i firefox-2.0.0.11
    - nix-env -q
      firefox-2.0.0.11 (the enabled one)
      firefox-2.0.0.9 (the disabled one)

  - --set-flag priority

    设置优先级，priority 越小优先级越高
    nix-env --set-flag priority {priority} gcc
